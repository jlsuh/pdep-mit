import GoT.gameOfThrones.*

describe "Test personajes" {

//	test "Cersei no se puede casarse con Jamie" {
//		const jamie = new Personaje(casa = lannisterHouse)
//		const rob = new Personaje(casa = starkHouse, conyuges = [ cersei ])
//		const cersei = new Personaje(casa = lannisterHouse, conyuges = [ rob ])
//		assert.notThat(cersei.puedeCasarseCon(jamie))
//	}
//
//	test "Cersei podría casarse con Jamie si no estuviera casado con Rob" {
//		const jamie = new Personaje(casa = lannisterHouse)
//		const cersei = new Personaje(casa = lannisterHouse)
//		assert.that(cersei.puedeCasarseCon(jamie))
//	}
//
//	test "Cersei no se puede casar con Jamie y el casamiento falla" {
//		const jamie = new Personaje(casa = lannisterHouse)
//		const rob = new Personaje(casa = starkHouse, conyuges = [ cersei ])
//		const cersei = new Personaje(casa = lannisterHouse, conyuges = [ rob ])
//		assert.throwsExceptionWithMessage("PersonajesNoSePuedenCasarException", { cersei.casar(jamie)})
//	}
//
//	test "Cersei se casa con Jamie si Rob no existe" {
//		const jamie = new Personaje(casa = lannisterHouse)
//		const cersei = new Personaje(casa = lannisterHouse)
//		cersei.casar(jamie)
//		assert.equals([ jamie ], cersei.conyuges())
//	}
//
//	test "Cersei está sola" {
//		const cersei = new Personaje(casa = lannisterHouse)
//		assert.that(cersei.estaSole())
//	}
	test "Los aliados de cersei son Jamie, Rob y Tyrion" {
		const jamie = new Personaje(casa = lannisterHouse)
		const rob = new Personaje(casa = starkHouse)
		const tyrion = new Personaje(casa = lannisterHouse)
		const cersei = new Personaje(casa = lannisterHouse)
		lannisterHouse.aniadirMiembro(jamie)
		lannisterHouse.aniadirMiembro(tyrion)
		lannisterHouse.aniadirMiembro(cersei)
		cersei.casar(rob)
		assert.equals(#{ rob, tyrion, jamie }, cersei.aliades())
	}

}

